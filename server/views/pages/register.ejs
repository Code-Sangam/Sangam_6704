<section class="auth-page">
    <div class="container">
        <div class="auth-container">
            <div class="auth-card">
                <div class="auth-header">
                    <div class="auth-logo">
                        <img src="/images/logo.svg" alt="Sangam Logo" class="logo">
                    </div>
                    <h1 class="auth-title">Join Sangam</h1>
                    <p class="auth-subtitle">Create your alumni network account</p>
                </div>
                
                <form class="auth-form" action="/auth/register" method="POST" id="register-form">
                    <div class="form-row">
                        <div class="form-group">
                            <label for="firstName" class="form-label">
                                <i class="fas fa-user"></i>
                                First Name *
                            </label>
                            <input 
                                type="text" 
                                id="firstName" 
                                name="firstName" 
                                class="form-input" 
                                value="<%= formData.firstName || '' %>"
                                placeholder="Enter your first name"
                                required
                                autocomplete="given-name"
                            >
                        </div>
                        
                        <div class="form-group">
                            <label for="lastName" class="form-label">
                                <i class="fas fa-user"></i>
                                Last Name *
                            </label>
                            <input 
                                type="text" 
                                id="lastName" 
                                name="lastName" 
                                class="form-input" 
                                value="<%= formData.lastName || '' %>"
                                placeholder="Enter your last name"
                                required
                                autocomplete="family-name"
                            >
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="email" class="form-label">
                            <i class="fas fa-envelope"></i>
                            Email Address *
                        </label>
                        <input 
                            type="email" 
                            id="email" 
                            name="email" 
                            class="form-input" 
                            value="<%= formData.email || '' %>"
                            placeholder="Enter your email address"
                            required
                            autocomplete="email"
                        >
                    </div>
                    
                    <div class="form-group">
                        <label for="role" class="form-label">
                            <i class="fas fa-graduation-cap"></i>
                            I am a *
                        </label>
                        <select id="role" name="role" class="form-select" required>
                            <option value="">Select your role</option>
                            <option value="student" <%= formData.role === 'student' ? 'selected' : '' %>>Current Student</option>
                            <option value="alumni" <%= formData.role === 'alumni' ? 'selected' : '' %>>Alumni</option>
                            <option value="faculty" <%= formData.role === 'faculty' ? 'selected' : '' %>>Faculty/Staff</option>
                        </select>
                    </div>
                    
                    <!-- Dynamic fields based on role -->
                    <div id="student-fields" class="role-fields" style="display: none;">
                        <div class="form-group">
                            <label for="university" class="form-label">
                                <i class="fas fa-university"></i>
                                University/Institution
                            </label>
                            <input 
                                type="text" 
                                id="university" 
                                name="university" 
                                class="form-input" 
                                value="<%= formData.university || '' %>"
                                placeholder="Enter your university name"
                            >
                        </div>
                        
                        <div class="form-group">
                            <label for="graduationYear" class="form-label">
                                <i class="fas fa-calendar"></i>
                                Expected Graduation Year
                            </label>
                            <input 
                                type="number" 
                                id="graduationYear" 
                                name="graduationYear" 
                                class="form-input" 
                                value="<%= formData.graduationYear || '' %>"
                                placeholder="e.g., 2025"
                                min="2020"
                                max="2035"
                            >
                        </div>
                    </div>
                    
                    <div id="alumni-fields" class="role-fields" style="display: none;">
                        <div class="form-row">
                            <div class="form-group">
                                <label for="university-alumni" class="form-label">
                                    <i class="fas fa-university"></i>
                                    University/Institution
                                </label>
                                <input 
                                    type="text" 
                                    id="university-alumni" 
                                    name="university" 
                                    class="form-input" 
                                    value="<%= formData.university || '' %>"
                                    placeholder="Enter your university name"
                                >
                            </div>
                            
                            <div class="form-group">
                                <label for="graduationYear-alumni" class="form-label">
                                    <i class="fas fa-calendar"></i>
                                    Graduation Year
                                </label>
                                <input 
                                    type="number" 
                                    id="graduationYear-alumni" 
                                    name="graduationYear" 
                                    class="form-input" 
                                    value="<%= formData.graduationYear || '' %>"
                                    placeholder="e.g., 2020"
                                    min="1970"
                                    max="<%= new Date().getFullYear() %>"
                                >
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label for="company" class="form-label">
                                    <i class="fas fa-building"></i>
                                    Current Company
                                </label>
                                <input 
                                    type="text" 
                                    id="company" 
                                    name="company" 
                                    class="form-input" 
                                    value="<%= formData.company || '' %>"
                                    placeholder="Enter your company name"
                                >
                            </div>
                            
                            <div class="form-group">
                                <label for="position" class="form-label">
                                    <i class="fas fa-briefcase"></i>
                                    Position/Title
                                </label>
                                <input 
                                    type="text" 
                                    id="position" 
                                    name="position" 
                                    class="form-input" 
                                    value="<%= formData.position || '' %>"
                                    placeholder="Enter your job title"
                                >
                            </div>
                        </div>
                    </div>
                    
                    <div id="faculty-fields" class="role-fields" style="display: none;">
                        <div class="form-row">
                            <div class="form-group">
                                <label for="company-faculty" class="form-label">
                                    <i class="fas fa-university"></i>
                                    Institution
                                </label>
                                <input 
                                    type="text" 
                                    id="company-faculty" 
                                    name="company" 
                                    class="form-input" 
                                    value="<%= formData.company || '' %>"
                                    placeholder="Enter institution name"
                                >
                            </div>
                            
                            <div class="form-group">
                                <label for="position-faculty" class="form-label">
                                    <i class="fas fa-chalkboard-teacher"></i>
                                    Position/Department
                                </label>
                                <input 
                                    type="text" 
                                    id="position-faculty" 
                                    name="position" 
                                    class="form-input" 
                                    value="<%= formData.position || '' %>"
                                    placeholder="Enter your position"
                                >
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="password" class="form-label">
                                <i class="fas fa-lock"></i>
                                Password *
                            </label>
                            <div class="password-input-container">
                                <input 
                                    type="password" 
                                    id="password" 
                                    name="password" 
                                    class="form-input" 
                                    placeholder="Create a strong password"
                                    required
                                    autocomplete="new-password"
                                    minlength="8"
                                >
                                <button type="button" class="password-toggle" onclick="togglePassword('password')">
                                    <i class="fas fa-eye" id="password-eye"></i>
                                </button>
                            </div>
                            <div class="password-strength" id="password-strength"></div>
                        </div>
                        
                        <div class="form-group">
                            <label for="confirmPassword" class="form-label">
                                <i class="fas fa-lock"></i>
                                Confirm Password *
                            </label>
                            <div class="password-input-container">
                                <input 
                                    type="password" 
                                    id="confirmPassword" 
                                    name="confirmPassword" 
                                    class="form-input" 
                                    placeholder="Confirm your password"
                                    required
                                    autocomplete="new-password"
                                >
                                <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">
                                    <i class="fas fa-eye" id="confirmPassword-eye"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="checkbox-label">
                            <input type="checkbox" name="agreeToTerms" id="agreeToTerms" required>
                            <span class="checkbox-custom"></span>
                            I agree to the <a href="/terms" target="_blank">Terms of Service</a> and <a href="/privacy" target="_blank">Privacy Policy</a>
                        </label>
                    </div>
                    
                    <button type="submit" class="btn btn-primary btn-full" id="register-btn">
                        <i class="fas fa-user-plus"></i>
                        Create Account
                    </button>
                </form>
                
                <div class="auth-footer">
                    <p>Already have an account? 
                        <a href="/auth/login" class="auth-link">Sign in here</a>
                    </p>
                </div>
            </div>
            
            <div class="auth-info">
                <div class="info-content">
                    <h2>Join Our Growing Community</h2>
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="stat-number">5,000+</div>
                            <div class="stat-label">Alumni Members</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number">2,500+</div>
                            <div class="stat-label">Current Students</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number">150+</div>
                            <div class="stat-label">Companies</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number">50+</div>
                            <div class="stat-label">Countries</div>
                        </div>
                    </div>
                    
                    <div class="benefits-list">
                        <div class="benefit-item">
                            <i class="fas fa-check-circle"></i>
                            <span>Free to join and use</span>
                        </div>
                        <div class="benefit-item">
                            <i class="fas fa-check-circle"></i>
                            <span>Connect with verified alumni</span>
                        </div>
                        <div class="benefit-item">
                            <i class="fas fa-check-circle"></i>
                            <span>Access to exclusive opportunities</span>
                        </div>
                        <div class="benefit-item">
                            <i class="fas fa-check-circle"></i>
                            <span>Professional networking tools</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('register-form');
    const submitBtn = document.getElementById('register-btn');
    const originalBtnText = submitBtn.innerHTML;
    const roleSelect = document.getElementById('role');
    
    // Show/hide role-specific fields
    roleSelect.addEventListener('change', function() {
        const selectedRole = this.value;
        const roleFields = document.querySelectorAll('.role-fields');
        
        // Hide all role fields
        roleFields.forEach(field => {
            field.style.display = 'none';
        });
        
        // Show selected role fields
        if (selectedRole) {
            const targetFields = document.getElementById(selectedRole + '-fields');
            if (targetFields) {
                targetFields.style.display = 'block';
            }
        }
    });
    
    // Trigger role change on page load if role is pre-selected
    if (roleSelect.value) {
        roleSelect.dispatchEvent(new Event('change'));
    }
    
    // Form submission handling
    form.addEventListener('submit', function(e) {
        if (!validateForm()) {
            e.preventDefault();
            return;
        }
        
        // Show loading state
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Creating Account...';
        
        // Re-enable button after 15 seconds as fallback
        setTimeout(() => {
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalBtnText;
        }, 15000);
    });
    
    // Real-time validation
    const inputs = form.querySelectorAll('input, select');
    inputs.forEach(input => {
        input.addEventListener('blur', function() {
            validateField(this);
        });
        
        input.addEventListener('input', function() {
            clearFieldError(this);
            
            // Special handling for password strength
            if (this.id === 'password') {
                updatePasswordStrength(this.value);
            }
            
            // Check password confirmation
            if (this.id === 'confirmPassword') {
                validatePasswordConfirmation();
            }
        });
    });
});

function validateForm() {
    const requiredFields = ['firstName', 'lastName', 'email', 'role', 'password', 'confirmPassword'];
    let isValid = true;
    
    requiredFields.forEach(fieldId => {
        const field = document.getElementById(fieldId);
        if (!validateField(field)) {
            isValid = false;
        }
    });
    
    // Check terms agreement
    const agreeToTerms = document.getElementById('agreeToTerms');
    if (!agreeToTerms.checked) {
        showFieldError(agreeToTerms, 'You must agree to the terms and conditions');
        isValid = false;
    }
    
    return isValid;
}

function validateField(field) {
    const value = field.value.trim();
    const fieldId = field.id;
    
    // Clear previous errors
    clearFieldError(field);
    
    // Required field validation
    if (field.hasAttribute('required') && !value) {
        showFieldError(field, `${getFieldLabel(fieldId)} is required`);
        return false;
    }
    
    // Specific field validations
    switch (fieldId) {
        case 'email':
            return validateEmail(field);
        case 'password':
            return validatePassword(field);
        case 'confirmPassword':
            return validatePasswordConfirmation();
        case 'graduationYear':
        case 'graduationYear-alumni':
            return validateGraduationYear(field);
        default:
            return true;
    }
}

function validateEmail(field) {
    const email = field.value.trim();
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    
    if (!email) {
        showFieldError(field, 'Email is required');
        return false;
    } else if (!emailRegex.test(email)) {
        showFieldError(field, 'Please enter a valid email address');
        return false;
    } else {
        return true;
    }
}

function validatePassword(field) {
    const password = field.value;
    
    if (!password) {
        showFieldError(field, 'Password is required');
        return false;
    } else if (password.length < 8) {
        showFieldError(field, 'Password must be at least 8 characters long');
        return false;
    } else {
        return true;
    }
}

function validatePasswordConfirmation() {
    const password = document.getElementById('password').value;
    const confirmPassword = document.getElementById('confirmPassword').value;
    const field = document.getElementById('confirmPassword');
    
    if (!confirmPassword) {
        showFieldError(field, 'Please confirm your password');
        return false;
    } else if (password !== confirmPassword) {
        showFieldError(field, 'Passwords do not match');
        return false;
    } else {
        return true;
    }
}

function validateGraduationYear(field) {
    const year = parseInt(field.value);
    const currentYear = new Date().getFullYear();
    
    if (field.value && (isNaN(year) || year < 1970 || year > currentYear + 10)) {
        showFieldError(field, 'Please enter a valid graduation year');
        return false;
    }
    
    return true;
}

function updatePasswordStrength(password) {
    const strengthDiv = document.getElementById('password-strength');
    
    if (!password) {
        strengthDiv.innerHTML = '';
        return;
    }
    
    let strength = 0;
    let feedback = [];
    
    // Length check
    if (password.length >= 8) strength++;
    else feedback.push('At least 8 characters');
    
    // Uppercase check
    if (/[A-Z]/.test(password)) strength++;
    else feedback.push('One uppercase letter');
    
    // Lowercase check
    if (/[a-z]/.test(password)) strength++;
    else feedback.push('One lowercase letter');
    
    // Number check
    if (/\d/.test(password)) strength++;
    else feedback.push('One number');
    
    // Special character check
    if (/[!@#$%^&*(),.?":{}|<>]/.test(password)) strength++;
    else feedback.push('One special character');
    
    const strengthLevels = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
    const strengthColors = ['#ef4444', '#f59e0b', '#eab308', '#22c55e', '#16a34a'];
    
    const level = Math.min(strength, 4);
    const strengthText = strengthLevels[level];
    const strengthColor = strengthColors[level];
    
    strengthDiv.innerHTML = `
        <div class="strength-bar">
            <div class="strength-fill" style="width: ${(strength / 5) * 100}%; background-color: ${strengthColor};"></div>
        </div>
        <div class="strength-text" style="color: ${strengthColor};">
            Password Strength: ${strengthText}
        </div>
        ${feedback.length > 0 ? `<div class="strength-feedback">Missing: ${feedback.join(', ')}</div>` : ''}
    `;
}

function togglePassword(fieldId) {
    const field = document.getElementById(fieldId);
    const eye = document.getElementById(fieldId + '-eye');
    
    if (field.type === 'password') {
        field.type = 'text';
        eye.className = 'fas fa-eye-slash';
    } else {
        field.type = 'password';
        eye.className = 'fas fa-eye';
    }
}

function showFieldError(field, message) {
    clearFieldError(field);
    
    field.classList.add('error');
    
    const errorDiv = document.createElement('div');
    errorDiv.className = 'field-error';
    errorDiv.textContent = message;
    
    field.parentElement.appendChild(errorDiv);
}

function clearFieldError(field) {
    field.classList.remove('error');
    
    const existingError = field.parentElement.querySelector('.field-error');
    if (existingError) {
        existingError.remove();
    }
}

function getFieldLabel(fieldId) {
    const labels = {
        firstName: 'First Name',
        lastName: 'Last Name',
        email: 'Email',
        role: 'Role',
        password: 'Password',
        confirmPassword: 'Password Confirmation',
        university: 'University',
        graduationYear: 'Graduation Year',
        company: 'Company',
        position: 'Position'
    };
    
    return labels[fieldId] || 'Field';
}
</script>

<style>
/* Extend the login page styles */
.form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
}

.form-select {
    width: 100%;
    padding: 0.875rem 1rem;
    border: 2px solid var(--border-color);
    border-radius: var(--radius-md);
    font-size: var(--text-base);
    transition: all var(--transition-fast);
    background: var(--background-primary);
    cursor: pointer;
}

.form-select:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.role-fields {
    margin-top: 1rem;
    padding: 1rem;
    background: var(--background-secondary);
    border-radius: var(--radius-md);
    border: 1px solid var(--border-color);
}

.password-strength {
    margin-top: 0.5rem;
}

.strength-bar {
    width: 100%;
    height: 4px;
    background: var(--border-color);
    border-radius: 2px;
    overflow: hidden;
    margin-bottom: 0.25rem;
}

.strength-fill {
    height: 100%;
    transition: all var(--transition-normal);
}

.strength-text {
    font-size: var(--text-xs);
    font-weight: 500;
    margin-bottom: 0.25rem;
}

.strength-feedback {
    font-size: var(--text-xs);
    color: var(--text-secondary);
}

.stats-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
    margin: 2rem 0;
}

.stat-item {
    text-align: center;
}

.stat-number {
    font-size: var(--text-2xl);
    font-weight: 700;
    color: white;
    margin-bottom: 0.25rem;
}

.stat-label {
    font-size: var(--text-sm);
    color: rgba(255, 255, 255, 0.8);
}

.benefits-list {
    margin-top: 2rem;
}

.benefit-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1rem;
    color: white;
}

.benefit-item i {
    color: var(--success-color);
    flex-shrink: 0;
}

@media (max-width: 768px) {
    .form-row {
        grid-template-columns: 1fr;
        gap: 0;
    }
    
    .stats-grid {
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
    }
    
    .stat-number {
        font-size: var(--text-xl);
    }
}

@media (max-width: 480px) {
    .stats-grid {
        grid-template-columns: 1fr;
    }
}
</style>